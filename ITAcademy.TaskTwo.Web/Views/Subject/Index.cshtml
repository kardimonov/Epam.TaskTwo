@model IEnumerable<ITAcademy.TaskTwo.Web.ViewModels.SubjectVM.SubjectIndex>
@section Title
{
    Subject Page - ITAcademy.TaskTwo
}
<div class="d-flex">
    <a asp-controller="Subject" asp-action="Create">Добавить новый учебный предмет</a>
    <a class="ml-auto" asp-controller="Account" asp-action="Register">Зарегистрировать нового пользователя</a>
</div>
<br />
<p>
    <input type="text" id="searchString" placeholder="&#x1F50D;  Search" class="form-control" />
</p>
<p style="display: none" class="updated-list">
    Subject list updated. <a href="#" class="updated-list-link">Click here</a> to refresh.
</p>
<table class="table">
    <thead>
        <tr>
            <th>Название</th>
            <th></th>
        </tr>
    </thead>
    <tbody id="tableBody">
        @foreach (var subject in Model)
        {
            <tr>
                <td>@subject.Name</td>
                <td>
                    <a asp-action="Details" asp-controller="Subject" asp-route-id="@subject.Id">Подробности</a> |
                    <a asp-action="Edit" asp-controller="Subject" asp-route-id="@subject.Id">Изменить</a> |
                    <a asp-action="Delete" asp-controller="Subject" asp-route-id="@subject.Id">Удалить</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section scripts {
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/subjectList.js" asp-append-version="true"></script>
    <script src="~/js/searchEngine.js" asp-append-version="true"></script>
    <script src="~/js/signal.js" asp-append-version="true"></script>
    <script type="text/javascript">
    let renewal = new subjectList({
        links:
            '@Html.ActionLink("Подробности", "Details", new { id = "_id_" }) | ' +
            '@Html.ActionLink("Изменить", "Edit", new { id = "_id_" }) | ' +
            '@Html.ActionLink("Удалить", "Delete", new { id = "_id_" })'
    });

    let subjectSearch = new searchEngine({
            searchUrl: '/Subject/Search',
            listUpdater: renewal,
    });

    let updater = new signal({
        methodName: 'UpdateSubjectList',
        listUpdater: renewal,
        searchOptions: {
            isInSearch: subjectSearch.isInSearch,
            clearSearch: subjectSearch.clearSearch
        }
    });

    updater.startListening();
    </script>
}